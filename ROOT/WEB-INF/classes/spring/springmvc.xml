<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
	<!-- 配置一个默认的servlet解析器，如果遇到静态资源，mvc和rest找不到，就用这个默认解析器解析url地址 -->
	<mvc:default-servlet-handler />

	<!-- 可以扫描controller、service、... 这里让扫描controller，扫描service层的实现类包而不是service接口 
		base-package:指定包的地址 -->
	<context:component-scan base-package="jlj.controller" />
	<context:component-scan base-package="jlj.controller.custom" />
	<context:component-scan base-package="jlj.service.impl" />

	<!--注解映射器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/> -->
	<!--注解适配器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/> -->

	<!-- 使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置 mvc:annotation-driven默认加载很多的参数绑定方法， 
		比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter 
		实际开发时使用mvc:annotation-driven 请特别注意修改编码，否则会出现中文乱码，即便你设置了过滤器，设置了tomcat，统统没用，只有改这里才可以 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

    <!-- 
    	全局异常解析器
    	实现HandlerExceptionResolver接口，
    	但是并不能直接解决类似404异常，不会进入CustomExceptionResolver类
     -->
	<bean class="jlj.exception.CustomExceptionResolver"></bean>
	
	<!-- 视图解析器 解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置jsp路径的前缀 -->
		<property name="prefix" value="/pages/" />
		<!-- 配置jsp路径的后缀 -->
		<property name="suffix" value=".jsp" />
		<property name="order" value="1"/>
	</bean>
	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- mvc:mapping 需要过滤的路径 /**表示/*及其子路径 -->
			<mvc:mapping path="/**"/>
			<bean class="jlj.interceptor.EncodingInterceptor">
				<property name="encoding" value="utf-8" />
			</bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<!-- mvc:exclude-mapping 需要排除的路径
 -->			<mvc:exclude-mapping path="/assets/**"/>
			<mvc:exclude-mapping path="/error"/>
			<mvc:exclude-mapping path="/success"/>
			<mvc:exclude-mapping path="/logout"/>
			<mvc:exclude-mapping path="/loging"/>
			<mvc:exclude-mapping path="/login"/>
			<mvc:exclude-mapping path="/isLogin"/>
			<mvc:exclude-mapping path="/login.jsp"/>
			<mvc:exclude-mapping path="/login.html"/>
			<mvc:exclude-mapping path="/"/>
			<mvc:exclude-mapping path="/index"/>
			<mvc:exclude-mapping path="/index.jsp"/>
			<mvc:exclude-mapping path="/index.html"/>
			<mvc:exclude-mapping path="/register"/>
			<mvc:exclude-mapping path="/register.jsp"/>
			<mvc:exclude-mapping path="/register.html"/>
			<mvc:exclude-mapping path="/registing"/>
			<bean class="jlj.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>